package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.hardware.ColorSensor;
import com.qualcomm.robotcore.hardware.DistanceSensor;
import com.qualcomm.hardware.bosch.BNO055IMU;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.util.Range;

@TeleOp(name="Control Robot", group="Linear OpMode")
public class Program extends LinearOpMode {

	private ElapsedTime runtime = new ElapsedTime();
	private DcMotor frontLeftMotor;
	private DcMotor frontRightMotor;
	private DcMotor rearLeftMotor;
	private DcMotor rearRightMotor;

	// Variables
	double frontLeftMotorPower = 0;
	double frontRightMotorPower = 0;
	double rearLeftMotorPower = 0;
	double rearRightMotorPower = 0;
	double threshold = 0.2;
	double target = 1;
	double currentSpeed = frontLeftMotorPower;
    double increaseAmount = 0.1;
    double increasedSpeed = currentSpeed - increaseAmount;
	double decreaseAmount = 0.1;
	double decreasedSpeed = currentSpeed - decreaseAmount;

@Override
	public void runOpMode() {

		frontLeftMotor = hardwareMap.get(DcMotor.class, "frontLeftMotor");
		frontRightMotor = hardwareMap.get(DcMotor.class, "frontRightMotor");
		rearLeftMotor = hardwareMap.get(DcMotor.class, "rearLeftMotor");
		rearRightMotor = hardwareMap.get(DcMotor.class, "rearRightMotor");

	  // Put initialization blocks here
	  waitForStart();

	  while (opModeIsActive()) {
		// Put loop blocks here

		// moving forward and backward
		if (Math.abs(gamepad1.left_stick_y + target) < threshold ) {

			// Move Straight
			frontLeftMotor.setPower(1);
			frontRightMotor.setPower(-1);

		} else if (Math.abs(gamepad1.left_stick_y - target) < threshold ) {

			// Move Backwards
			frontLeftMotor.setPower(-1);
			frontRightMotor.setPower(1);

		} else {

			// Stopped Motor
			frontLeftMotor.setPower(0);
			frontRightMotor.setPower(0);
			rearLeftMotor.setPower(0);
			rearRightMotor.setPower(0);

	}

	   	// Right and Left turning
	   	if (Math.abs(gamepad1.right_stick_x + target) < threshold ) {

			// Turn Left while still
			frontLeftMotor.setPower(-1);
			frontRightMotor.setPower(0);

		} else if (Math.abs(gamepad1.right_stick_x - target) < threshold ) {

			// Turn Right while still
			frontLeftMotor.setPower(0);
			frontRightMotor.setPower(1);

		} else {

			// Stopped Motor
			frontLeftMotor.setPower(0);
			frontRightMotor.setPower(0);
			rearLeftMotor.setPower(0);
			rearRightMotor.setPower(0);
	   }

	/*
		if ((Math.abs(gamepad1.right_stick_x + target) < threshold ) && (Math.abs(gamepad1.left_stick_y + target) < threshold )) {

			// Turn Left while driving forward
			frontLeftMotor.setPower(-1);
			frontRightMotor.setPower(-0.5);

		} else if ((Math.abs(gamepad1.right_stick_x - target) < threshold ) && (Math.abs(gamepad1.left_stick_y - target) < threshold )) {

			// Turn Right while driving forward
			frontLeftMotor.setPower(1);
			frontRightMotor.setPower(0.5);

		} else if ((Math.abs(gamepad1.right_stick_x + target) < threshold ) && (Math.abs(gamepad1.left_stick_y + target) < threshold )) {

			// Turn Right while driving backward
			frontLeftMotor.setPower(-0.5);
			frontRightMotor.setPower(-1);

		} else if ((Math.abs(gamepad1.right_stick_x - target) < threshold ) && (Math.abs(gamepad1.left_stick_y - target) < threshold )) {

			// Turn Right while driving backward
			frontLeftMotor.setPower(0.5);
			frontRightMotor.setPower(1);

		} else {

			// Stopped Motor
			frontLeftMotor.setPower(0);
			frontRightMotor.setPower(0);
			rearLeftMotor.setPower(0);
			rearRightMotor.setPower(0);

	   }
*/
		if (gamepad1.dpad_up == true) {

			//increase forward speed
			frontLeftMotor.setPower(increasedSpeed);
			frontRightMotor.setPower(decreasedSpeed);

	/*	} else if (gamepad1.dpad_down == true) {

			//control backward speed
			frontLeftMotor.setPower((frontLeftMotorPower) - 0.1);
			frontRightMotor.setPower((frontRightMotorPower) + 0.1);

		 } else if (gamepad1.dpad_right == true) {

			//control right turn speed
			frontLeftMotor.setPower((frontLeftMotorPower) + 0.1);
			frontRightMotor.setPower((frontRightMotorPower) + 0.1);

		} else if (gamepad1.dpad_left == true) {

			//control left turn speed
			frontLeftMotor.setPower((frontLeftMotorPower) - 0.1);
			frontRightMotor.setPower((frontRightMotorPower) - 0.1);
		*/
	   } else {

			// Stopped Motor
			frontLeftMotor.setPower(0);
			frontRightMotor.setPower(0);
			rearLeftMotor.setPower(0);
			rearRightMotor.setPower(0);
	   }

			// fire or shoot or launch the ARTIFACT
			// edit this later though because we can't have this comment or whatever also we might not use two motors so uh be ready to remove one I guess cuh
			if (Math.abs(gamepad1.right_trigger + target) < threshold ) {

				// fire the balls (lmao balls)
				rearLeftMotor.setPower(1);
				rearRightMotor.setPower(-1);

			} else if (Math.abs(gamepad1.left_trigger + target) < threshold ) {

				// un-fire the balls (lmao un-balls)
				rearLeftMotor.setPower(-1);
				rearRightMotor.setPower(1);

			} else {

				// Stopped Motor
				frontLeftMotor.setPower(0);
				frontRightMotor.setPower(0);
				rearLeftMotor.setPower(0);
				rearRightMotor.setPower(0);
			}

	  if (gamepad1.back == true) {

	  	    //Emergency stop
			frontLeftMotor.setPower(0);
			frontRightMotor.setPower(0);
			rearLeftMotor.setPower(0);
			rearRightMotor.setPower(0);

		}

		// Show the elapsed game time, wheel power, and Left/Right stick Pos.
		telemetry.addData("Status", "Run Time: " + runtime.toString());
		telemetry.addData("Motors", "front left (%.2f), front right (%.2f)", frontLeftMotorPower, frontRightMotorPower);
		telemetry.addData("Motors", "rear left (%.2f), rear right (%.2f)", rearLeftMotorPower, rearRightMotorPower);
		telemetry.addData ("Right Stick Pos", gamepad1.right_stick_x);
		telemetry.addData ("Left Stick Pos", gamepad1.left_stick_y);

		// Gamepad A, Y, B, and X buttons
		telemetry.addData ("A button", gamepad1.a);
		telemetry.addData ("Y button", gamepad1.y);
		telemetry.addData ("B button", gamepad1.b);
		telemetry.addData ("X button", gamepad1.x);

		// Gamepad Dpad
		telemetry.addData ("Up Dpad", gamepad1.dpad_up);
		telemetry.addData ("Down Dpad", gamepad1.dpad_down);
		telemetry.addData ("Right Dpad", gamepad1.dpad_right);
		telemetry.addData ("Left Dpad", gamepad1.dpad_left);

		//Triggers and Bumpers
		telemetry.addData ("Left trigger", gamepad1.left_trigger);
		telemetry.addData ("Right trigger", gamepad1.right_trigger);
		telemetry.addData ("Left bumper", gamepad1.left_bumper);
		telemetry.addData ("Right bumper", gamepad1.right_bumper);

		// Emergency stop
		telemetry.addData ("back", gamepad1.back);

		// Update every time it loops
		telemetry.update ();
		}
	  }
}

/*
 * Checklist/ToDo
 *
 *
 */
